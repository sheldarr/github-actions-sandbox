on:
  push:
    branches:
      - master
      - staging

env:
  TEST_VARIABLE: "kek"

jobs:
  params:
    runs-on: ubuntu-latest
    outputs:
      TARGET_ENVIRONMENT: ${{ steps.determine-target-environment.outputs.TARGET_ENVIRONMENT }}
      NODES_MATRIX: ${{ steps.prepare-nodes-matrix.outputs.NODES_MATRIX }}
    steps:
      - run: echo $GITHUB_REF
      - run: echo "$GITHUB_REF_NAME"
      - run: echo "${{ toJSON(env) }}"
      - run: echo "${{ toJSON(github) }}"
      - run: env
      - id: determine-target-environment
        run: echo "TARGET_ENVIRONMENT=${{ github.ref_name == 'master' && 'production' || 'staging' }}" >> $GITHUB_OUTPUT
      - id: prepare-nodes-matrix
        run: |
          echo "NODES_MATRIX='[$(seq -s, 2)]'" >> $GITHUB_OUTPUT
  check-environment:
    needs: [params]
    runs-on: ubuntu-latest
    environment: ${{ needs.params.outputs.TARGET_ENVIRONMENT }}
    steps:
      - uses: actions/checkout@v3
      - run: echo $GITHUB_REF_NAME
      - run: echo ${{ needs.params.outputs.TARGET_ENVIRONMENT }}
      - run: echo ${{ needs.params.outputs.NODES_MATRIX }}
      - run: echo $SSH_HOST
      - run: echo $TEST_VARIABLE
      - run: echo "${{ env.SSH_HOST }}"
      - run: echo "${{ secrets.SSH_HOST }}"
  nodes:
    needs: [params]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        NODE: ${{ fromJSON(needs.params.outputs.NODES_MATRIX) }}
    steps:
      - run: echo ${{ secrets[format('NODE_{0}', matrix.NODE)] }}
